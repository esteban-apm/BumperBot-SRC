/*
Programacion de bumper
*/
//#include "AFMotor.h"
bool derecha, izquierda, avanzar, detener;
 //Motor derecho
#define ena 3
#define pin1  1
#define pin2  0
 
 //Motor izquierda
#define enb 5
#define pin3 6
#define pin4 4

int distanciamax = 100;
float distmin = 40;
//Sensor Ultras贸nico derecho
#define trig1 7
#define echo1 8
long tiempoUS1 = 0;
float distancia1 = 0;
//Sensor Ultras贸nico izquierdp
#define  trig2 9
#define  echo2 10 
long tiempoUS2 = 0;
float distancia2 = 0;
//Infrarrojos
#define infraAO A0
int ir1 = 0;
bool white;
#define infraDO A2
int ir2 = 0;
bool whiteclear;
//#define infraDO2 A3

void setup() 
{
  Serial.begin(9600);

  pinMode(ena, OUTPUT);
  pinMode(enb, OUTPUT);
  
  pinMode(trig1, OUTPUT);
  pinMode(echo1, INPUT);
  pinMode(trig2, OUTPUT);
  pinMode(echo2, INPUT);

  pinMode(pin1, OUTPUT);
  pinMode(pin2, OUTPUT);
  pinMode(pin3, OUTPUT);
  pinMode(pin4, OUTPUT);

  pinMode(infraAO, INPUT);


}

void loop() 
{
  distanciaUS1();
  distanciaUS2();
  secuenciaprueba();
}

void tacleo()
{
  if (whiteclear == true)
  {
    if (distmin < distanciamax)
    {
      if ((distancia1 < (distmin-10) && distancia1 > (distmin+10)) || (distancia2 < (distmin-10) && distancia2 > (distmin+10)))
      {
        avance();
      }
      else
      {
        rastreo();
        return distmin;

      }
    }
  }
  else
  {
    backwards();
    return;
  }
}

void rastreo()
{
  girarderecha();

  if (distancia1 < distmin)
  {
    distmin = distancia1;
  }
  else if (distancia2 < distmin)
  {
    distmin = distancia2;
  }
  delay(1000);

}

void distanciaUS1()
{
  digitalWrite(trig1, LOW);
  delayMicroseconds(5);
  digitalWrite(trig1, HIGH);
  delayMicroseconds(10);
  
  tiempoUS1 = pulseIn(echo1, HIGH);
  distancia1 = (tiempoUS1/2) / 29.2;
  Serial.print("Distancia Ultras贸nico1 derecha = "); Serial.print(distancia1);
  delay(100);
}
void distanciaUS2()
{
  digitalWrite(trig2, LOW);
  delayMicroseconds(5);
  digitalWrite(trig2, HIGH);
  delayMicroseconds(10);
  
  tiempoUS2 = pulseIn(echo2, HIGH);
  distancia2 = (tiempoUS2/2) / 29.2;
  Serial.print("Distancia Ultras贸nico1 derecha = "); Serial.print(distancia2);
  delay(100);
}

void secuenciaprueba()
{
  analogWrite(ena, 255);
  analogWrite(enb, 255);
  avance();
  delay(2000);

  analogWrite(ena, 200);
  analogWrite(enb, 200);
  girarderecha();
  delay(2000);

  analogWrite(ena, 100);
  analogWrite(enb, 100);
  girarizq();
  delay(2000);
  
  analogWrite(ena, 200);
  analogWrite(enb, 200);
  girarpropioeje();
  delay(2000);
}
void avance()
{
  Serial.print("Avanzar");
  digitalWrite(pin1, 1);
  digitalWrite(pin2, 0);
  digitalWrite(pin3, 1);
  digitalWrite(pin4, 0);
}
void backwards()
{
  Serial.print("Avanzar");
  digitalWrite(pin1, 0);
  digitalWrite(pin2, 1);
  digitalWrite(pin3, 0);
  digitalWrite(pin4, 1);
}
void girarpropioeje()
{
  Serial.print("Girar sobre propio eje");
  digitalWrite(pin1, 1);
  digitalWrite(pin2, 0);
  digitalWrite(pin3, 0);
  digitalWrite(pin4, 1);
}
void girarderecha()
{
  Serial.print("Girar derecha");
  digitalWrite(pin1, 0);
  digitalWrite(pin2, 0);
  digitalWrite(pin3, 1);
  digitalWrite(pin4, 0);
}
void girarizq()
{
  Serial.print("Girar izquierda");
  digitalWrite(pin1, 1);
  digitalWrite(pin2, 0);
  digitalWrite(pin3, 0);
  digitalWrite(pin4, 0);
}

void irsensor1()
{
  ir1 = analogRead(infraAO);
  if (ir1 < 500)
  {
    white = true;
    Serial.print("Es blanco");
  }
  else
  {
    white = false;
    Serial.print("No es blanco");
  }
  delay(200);
}
void irsensor2()
{
  ir2 = digitalRead(infraDO);
  if (ir1 == 0)
  {
    whiteclear = true;
    Serial.print("Whiteclear = true");
  }
  else
  {
    whiteclear = false;
    Serial.print("Whiteclear = false");
  }
  delay(200);
}

